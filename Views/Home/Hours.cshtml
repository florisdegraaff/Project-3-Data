@model code.Models.Hour
@{
	List<Hour> data = (List<Hour>) ViewData ["Hour"];
}


<!-- Create title and hidden table -->
<h2>@ViewData["Title"]</h2>

<table class="table" id="hour" style="display: none">
	@{
		foreach (var dat in data)
		{
			<tr>
				<td>@dat.year</td>
				<td>@dat.season</td>
				<td>@dat.time</td>
			</tr>
		}
	}
</table>

<div id="charts">
	<div id="left" style="width: 45%; height: 400px; display: inline-block">
		<div class="dropdown">
			<button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
				Select year
				<span class="caret"></span>
			</button>
			<ul id="left-dropdown" class="dropdown-menu" aria-labelledby="dropdownMenu1">
				@{
					string lastYear = "";
					foreach (var dat in data)
					{
						if (dat.year != lastYear) {
							<li onclick="ChangeChartYear(@dat.year, 'left')"><a>@dat.year</a></li>

							lastYear = dat.year;
						}
					}
				}
			</ul>
		</div>
		<div id="left-chart"></div>
	</div>
	<div id="right" style="width: 45%; height: 400px; display: inline-block">
		<div class="dropdown">
			<button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
				Select year
				<span class="caret"></span>
			</button>
			<ul id="right-dropdown" class="dropdown-menu" aria-labelledby="dropdownMenu1">
				@{
					lastYear = "";
					foreach (var dat in data)
					{
						if (dat.year != lastYear) {
							<li onclick="ChangeChartYear(@dat.year, 'right')"><a>@dat.year</a></li>

							lastYear = dat.year;
						}
					}
				}
			</ul>
		</div>
		<div id="right-chart"></div>
	</div>
</div>


<script>

    var left_chart;
    var right_chart;

    var left_data = [];
    var right_data = [];

    var data = [];

    // Functions
    function ChangeChartYear (year, chart) {
        var i = 0;
        data.forEach(element => {
            if (element.year == year) {
                window[chart + "_data"][i] = element;
                i++;
            }
        });

        window[chart + "_chart"].options.data[0].dataPoints = window[chart + "_data"];
		window[chart + "_chart"].options.title.text = year;
		window[chart + "_chart"].render();
    }

	window.onload = function () {

		
    // Data collection from table
    table = document.getElementById ("hour");
    for (var i = 0; i < table.rows.length; i++) {
        rowData = [];

        var cellLength = table.rows.item(i).cells.length;
        for (var j = 0; j < cellLength; j++) {
            rowData [j] = table.rows.item(i).cells.item(j).innerHTML;
        }

        data [i] = {year: rowData[0], label: rowData[1], y: parseInt(rowData[2])};
    }

    // Create charts
    left_chart = new CanvasJS.Chart("left-chart", {
        theme: "theme2",
        animationEnabled: true,
        height: 400,
		title: {
			text: "2017"
		},
        data: [
            {
                type: "column",
				dataPoints: data
            }
        ]
    });
	ChangeChartYear ("2017", "left");

    right_chart = new CanvasJS.Chart("right-chart", {
        theme: "theme2",
        animationEnabled: true,
        height: 400,
		title: {
			text: "2016"
		},
        data: [
            {
                type: "column",
				dataPoints: data				
            }
        ]
    });
	ChangeChartYear ("2016", "right");	
};
</script>